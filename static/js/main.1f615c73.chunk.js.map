{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","clearGood","setState","setGood","good","this","className","type","onClick","map","isSelected","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oPAIaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAyB,CACvBC,aAAc,OAFlB,EAKEC,UAAY,WACV,EAAKC,SAAS,CACZF,aAAc,MAPpB,EAWEG,QAAU,SAACC,GACT,EAAKF,SAAS,CACZF,aAAcI,KAbpB,4CAiBE,WAA2B,IAAD,OAChBJ,EAAiBK,KAAKN,MAAtBC,aAER,OACE,uBAAMM,UAAU,oBAAhB,UACGN,EACC,qBAAIM,UAAU,sCAAd,oBACMN,EADN,gBAIE,wBACE,UAAQ,cACRO,KAAK,SACLD,UAAU,cACVE,QAASH,KAAKJ,eAIlB,oBAAIK,UAAU,QAAd,+BAGF,uBAAOA,UAAU,QAAjB,SACE,gCACGT,EAAMY,KAAI,SAACL,GACV,IAAMM,EAAaV,IAAiBI,EAEpC,OACE,qBACE,UAAQ,OAERE,UAAWI,EACP,+BACA,GALN,UAOE,6BACE,wBACEF,QAAS,WAENE,EAEG,EAAKT,YADL,EAAKE,QAAQC,IAGnB,oBAAYM,EAAa,eAAiB,aAC1CH,KAAK,SACLD,UAAS,iBAAYI,EAAa,UAAY,IAThD,SAWGA,EAAa,IAAM,QAGxB,oBAAI,UAAQ,YAAYJ,UAAU,eAAlC,SACGF,MArBEA,iBA9CvB,GAAyBO,IAAMC,WClB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1f615c73.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string;\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    selectedGood: 'Jam',\n  };\n\n  clearGood = () => {\n    this.setState({\n      selectedGood: '',\n    });\n  };\n\n  setGood = (good: string) => {\n    this.setState({\n      selectedGood: good,\n    });\n  };\n\n  render(): React.ReactNode {\n    const { selectedGood } = this.state;\n\n    return (\n      <main className=\"section container\">\n        {selectedGood ? (\n          <h1 className=\"title is-flex is-align-items-center\">\n            {`${selectedGood} is selected`}\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"ClearButton\"\n              type=\"button\"\n              className=\"delete ml-3\"\n              onClick={this.clearGood}\n            />\n          </h1>\n        ) : (\n          <h1 className=\"title\">No goods selected</h1>\n        )}\n\n        <table className=\"table\">\n          <tbody>\n            {goods.map((good) => {\n              const isSelected = selectedGood === good;\n\n              return (\n                <tr\n                  data-cy=\"Good\"\n                  key={good}\n                  className={isSelected\n                    ? 'has-background-success-light'\n                    : ''}\n                >\n                  <td>\n                    <button\n                      onClick={() => {\n                        // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n                        !isSelected\n                          ? this.setGood(good)\n                          : this.clearGood();\n                      }}\n                      data-cy={`${isSelected ? 'RemoveButton' : 'AddButton'}`}\n                      type=\"button\"\n                      className={`button ${isSelected ? 'is-info' : ''}`}\n                    >\n                      {isSelected ? '-' : '+'}\n                    </button>\n                  </td>\n                  <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                    {good}\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n\n// has-background-success-light\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}